{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport fetch from \"cross-fetch\";\nconst UPDATE_MESSAGES = 'updateMessages';\nconst ADD_MESSAGE = 'addMessage';\nconst apiURL = \"http://localhost:3001\";\nconst initialState = {\n  messages: []\n};\nexport default createStore(function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        return { ...state,\n          messages: [...state.messages, action.message]\n        };\n      }\n\n    case UPDATE_MESSAGES:\n      {\n        return { ...state,\n          messages: action.messages\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}, applyMiddleware(thunkMiddleware)); ///////////////actiion 1\n\nexport const updateMessages = messages => {\n  return {\n    type: UPDATE_MESSAGES,\n    messages\n  };\n};\nexport const fetchMessages = () => {\n  return dispatch => {\n    return fetch(apiURL).then(response => response.json()).then(response => {\n      dispatch(updateMessages(response));\n    });\n  };\n}; //////////////action 2\n\nexport const pushMessage = message => {\n  return {\n    type: ADD_MESSAGE,\n    message\n  };\n};\nexport const sendMessage = data => {\n  return dispatch => {\n    return fetch(apiURL, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(() => dispatch(pushMessage(data)));\n  };\n};","map":{"version":3,"sources":["D:/Profiles/react-chat/src/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","fetch","UPDATE_MESSAGES","ADD_MESSAGE","apiURL","initialState","messages","state","action","type","message","updateMessages","fetchMessages","dispatch","then","response","json","pushMessage","sendMessage","data","method","body","JSON","stringify"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,eAAe,GAAG,gBAAxB;AACA,MAAMC,WAAW,GAAG,YAApB;AAEA,MAAMC,MAAM,GAAG,uBAAf;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,eAAeR,WAAW,CAAC,UAAUS,KAAK,GAAGF,YAAlB,EAAgCG,MAAhC,EAAwC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGI,KADE;AAELD,UAAAA,QAAQ,EAAE,CAAC,GAAGC,KAAK,CAACD,QAAV,EAAoBE,MAAM,CAACE,OAA3B;AAFL,SAAP;AAID;;AACD,SAAKR,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGK,KADE;AAELD,UAAAA,QAAQ,EAAEE,MAAM,CAACF;AAFZ,SAAP;AAID;;AACD;AAAS;AACP,eAAOC,KAAP;AACD;AAfH;AAiBD,CAlByB,EAkBvBR,eAAe,CAACC,eAAD,CAlBQ,CAA1B,C,CAqBA;;AACA,OAAO,MAAMW,cAAc,GAAIL,QAAD,IAAc;AAC1C,SAAO;AACLG,IAAAA,IAAI,EAAEP,eADD;AAELI,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMM,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACnB,WAAOZ,KAAK,CAACG,MAAD,CAAL,CACJU,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECC,QAAQ,IAAI;AAChBF,MAAAA,QAAQ,CAACF,cAAc,CAACI,QAAD,CAAf,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAME,WAAW,GAAGP,OAAO,IAAI;AACpC,SAAO;AACLD,IAAAA,IAAI,EAAEN,WADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMQ,WAAW,GAAGC,IAAI,IAAI;AACjC,SAAON,QAAQ,IAAI;AACjB,WAAOZ,KAAK,CAACG,MAAD,EAAS;AAACgB,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAAvB,KAAT,CAAL,CACJL,IADI,CACC,MAAMD,QAAQ,CAACI,WAAW,CAACE,IAAD,CAAZ,CADf,CAAP;AAED,GAHD;AAID,CALM","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport fetch from \"cross-fetch\";\n\nconst UPDATE_MESSAGES = 'updateMessages';\nconst ADD_MESSAGE = 'addMessage';\n\nconst apiURL = \"http://localhost:3001\";\n\nconst initialState = {\n  messages: []\n};\n\nexport default createStore(function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_MESSAGE: {\n      return {\n        ...state,\n        messages: [...state.messages, action.message]\n      };\n    }\n    case UPDATE_MESSAGES: {\n      return {\n        ...state,\n        messages: action.messages\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}, applyMiddleware(thunkMiddleware));\n\n\n///////////////actiion 1\nexport const updateMessages = (messages) => {\n  return {\n    type: UPDATE_MESSAGES,\n    messages\n  }\n};\n\nexport const fetchMessages = () => {\n  return (dispatch) => {\n    return fetch(apiURL)\n      .then(response => response.json())\n      .then(response => {\n        dispatch(updateMessages(response));\n      })\n  }\n};\n\n//////////////action 2\nexport const pushMessage = message => {\n  return {\n    type: ADD_MESSAGE,\n    message\n  };\n};\n\nexport const sendMessage = data => {\n  return dispatch => {\n    return fetch(apiURL, {method: 'POST', body: JSON.stringify(data)})\n      .then(() => dispatch(pushMessage(data)));\n  }\n};"]},"metadata":{},"sourceType":"module"}